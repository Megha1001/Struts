MVC
----------
Architectural design pattern for building any enterprise application, web application or any standalone application.

Application divides into three parts
- Model
- View - Presentation code
	- HTML
	- HTML-5
	- JSP
	- Custum Tags
	- Adobe Flex
	for providing validation support
		- Ext JS
		- JS
		- JQuery
		- AJAX
		- Boostrap
	For Styles
		- CSS
		- CSS 3
		
- Controller --> Read data coming form presentation part and send data to presentation part
	- Servlets
	- JSP
	- Filter
	- Tag

MVC-II
-----------------
- Model --> divide into three parts
	- Business
		Java code
		
		
	- DAO --> for database CRUD operation
		- JDBC
		ORM Operation -  Provide cache support also and query are not database dependent
			- EJB-E - QL -- database independent
			- Hibernate - HQL - object oriented queries --> database independent
			- JPA

	- Service
		- for rollback --> weblogic, webserver can provide transactional support
			Suppose we have one fund transfer service from account 1--> 2, while updating amt in 2 bank if it fails we need to rollback the value of amt in acct 1 also, how we can do it in business layer by using TX(Transactional Support) and our java code need to implement from  EJB session beans or else Spring
	if Using weblogic , websphere --> we need to use EJBs in business class
	or if using spring webservice -->  we need to use Spring classes in Java logic
